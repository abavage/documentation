## oc edit prometheusrules kube-apiserver-recording-rules -n openshift-kube-apiserver



## API Request Duration by Verb - 99th Percentile
histogram_quantile(0.99, sum(resource_verb:apiserver_request_duration_seconds_bucket:rate:5m{apiserver="kube-apiserver"}) by (verb, le))
round(histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{apiserver="kube-apiserver",subresource!~"proxy|attach|log|exec|portforward",verb!~"WATCH|WATCHLIST|PROXY"}[5m])) by (verb, le)), 0.0001)


## etcd Request Duration - 99th Percentile
histogram_quantile(0.99, operation:etcd_request_duration_seconds_bucket:rate5m)
round(histogram_quantile(0.99, (sum(rate(etcd_request_duration_seconds_bucket[5m])) by (operation, le))),  0.0001)



## Request Duration by Resource and Verb - 99th Percentile
topk(20, histogram_quantile(0.99, resource_verb:apiserver_request_duration_seconds_bucket:rate:5m{apiserver="kube-apiserver"}))
topk(20, histogram_quantile(0.99, (sum(rate(apiserver_request_duration_seconds_bucket{apiserver=~"kube-apiserver",subresource!~"proxy|attach|log|exec|portforward",verb!~"WATCH|WATCHLIST|PROXY"}[5m])) by (apiserver, resource, verb, le)))) 


## Request Rate by Resource and Verb
topk(20, resource_verb:apiserver_request_total:rate5m{apiserver="kube-apiserver"})
topk(20, round(sum(rate(apiserver_request_total{apiserver=~"kube-apiserver"}[5m])) by (apiserver, resource, verb), 0.0001))


## Request Duration by Read vs Write - 99th Percentile 
histogram_quantile(0.99, write:apiserver_request_duration_seconds_bucket:rate5m{apiserver="kube-apiserver"})
round(histogram_quantile(0.99, sum(rate(apiserver_request_duration_seconds_bucket{apiserver=~"kube-apiserver",verb=~"POST|PUT|PATCH|UPDATE|DELETE"}[5m])) by (apiserver, le)), 0.0001)

histogram_quantile(0.99, list:apiserver_request_duration_seconds_bucket:rate5m{apiserver="kube-apiserver"})
round(histogram_quantile(0.99, (sum(rate(apiserver_request_duration_seconds_bucket{apiserver=~"kube-apiserver",verb=~"LIST|GET"}[5m])) by (apiserver, le))), 0.0001)


 
## Request Rate by Read vs Write 
write:apiserver_request_total:rate5m{apiserver="kube-apiserver"}
sum(rate(apiserver_request_total{apiserver=~"kube-apiserver",verb=~"POST|PUT|PATCH|UPDATE|DELETE"}[5m]))by (apiserver)

read:apiserver_request_total:rate5m{apiserver="kube-apiserver"}
sum(rate(apiserver_request_total{apiserver=~"kube-apiserver",verb=~"LIST|GET"}[5m])) by (apiserver)


## Requests Dropped Rate 
group_resource:apiserver_request_total:rate5m{apiserver="kube-apiserver"}
sum(rate(apiserver_request_total{apiserver=~"kube-apiserver",code="429"}[5m])) by (apiserver, group, resource)


## Requests Terminated Rate
component_resource:apiserver_request_terminations_total:rate:5m{apiserver="kube-apiserver"}
sum(rate(apiserver_request_terminations_total{apiserver=~"kube-apiserver"}[5m])) by (apiserver, component, resource)


## Request Rate by Status
code:apiserver_request_total:rate5m{apiserver="kube-apiserver"}
sum(rate(apiserver_request_total{apiserver=~"kube-apiserver"}[5m])) by (apiserver, code)


## Request Rate by Instance
instance:apiserver_request_total:rate5m{apiserver="kube-apiserver"}
sum(rate(apiserver_request_total{apiserver=~"kube-apiserver"}[5m])) by (apiserver, instance)



## Long Running Requests by Resource
topk(20, resource:apiserver_longrunning_requests:sum{apiserver="kube-apiserver"})
topk(20, sum(apiserver_longrunning_requests{apiserver=~"kube-apiserver"}) by (apiserver, resource))


## Long Running Requests by Instance
instance:apiserver_longrunning_requests:sum{apiserver="kube-apiserver"}
sum(apiserver_longrunning_requests{apiserver=~"kube-apiserver"}) by (apiserver, instance)



## Requests in Flight
instance_request_kind:apiserver_current_inflight_requests:sum{apiserver="kube-apiserver"}
sum(apiserver_current_inflight_requests{apiserver=~"kube-apiserver"}) by (apiserver, instance, request_kind)


## Response Bytes per Second by Instance
instance:apiserver_response_sizes_sum:rate5m{apiserver="kube-apiserver"}
sum(rate(apiserver_response_sizes_sum{apiserver=~"kube-apiserver"}[5m])) by (apiserver, instance)



## Response Bytes per Second by Resource and Verb
topk(10, resource_verb:apiserver_response_sizes_sum:rate5m{apiserver="kube-apiserver"})
topk(10, sum(rate(apiserver_response_sizes_sum{apiserver=~"kube-apiserver"}[5m])) by (apiserver, resource, verb))



################## start thes - not 100% how accurate they are

## Priority & Fairness: Requests Rejected
flow_schema_priority_level_reason:apiserver_flowcontrol_rejected_requests_total:rate5m{apiserver="kube-apiserver"}
sum(rate(apiserver_flowcontrol_rejected_requests_total{apiserver=~"openshift-apiserver|kube-apiserver|openshift-oauth-apiserver"}[5m])) by (apiserver, flow_schema, priority_level, reason)



## Priority & Fairness: Request Wait Duration - 99th Percentile
histogram_quantile(0.99, flow_schema_priority_level:apiserver_flowcontrol_request_wait_duration_seconds_bucket:rate5m{apiserver="kube-apiserver"})
histogram_quantile(0.99, (sum(rate(apiserver_flowcontrol_request_wait_duration_seconds_bucket{apiserver=~"kube-apiserver", execute="true"}[5m])) by (apiserver, flow_schema, priority_level, le)))


## Priority & Fairness: Request Queue Length
histogram_quantile(0.99, flow_schema_priority_reason:apiserver_flowcontrol_request_queue_length_after_enqueue_bucket:rate5m{apiserver="kube-apiserver"})
histogram_quantile(0.99, (sum(rate(apiserver_flowcontrol_request_queue_length_after_enqueue_bucket{apiserver=~"kube-apiserver"}[5m])) by (apiserver, flow_schema, priority_level, reason, le)))



## Priority & Fairness: Request Dispatch Rate - RR does not reflect the real result eg netsed RR's.
flow_schema_priority_level:apiserver_flowcontrol_request_execution_seconds_bucket:rate5m{apiserver="kube-apiserver"}



## Priority & Fairness: Request Execution Duration - 99th Percentile - RR does not reflect the real result eg netsed RR's
histogram_quantile(0.99, flow_schema_priority_level_le:apiserver_flowcontrol_request_execution_seconds_bucket:rate5m{apiserver="kube-apiserver"}) 



## Priority & Fairness: Currently Executing Requests - RR does not reflect the real result eg netsed RR's
flow_schema_priority_level:apiserver_flowcontrol_current_executing_requests:sum{apiserver="kube-apiserver"}


# Priority & Fairness: Concurrency Limit by Priority Level
priority_level:apiserver_flowcontrol_request_concurrency_limit:sum{apiserver="kube-apiserver"}

# Priority & Fairness: Pending in Queue
flow_schema_priority_level:apiserver_flowcontrol_current_inqueue_requests:sum{apiserver="kube-apiserver"}

################## end thses


## Self-requests Rate by Resource and Verb
resource_verb:apiserver_selfrequest_total:rate5m{apiserver="kube-apiserver"}
sum(rate(apiserver_selfrequest_total{apiserver=~"kube-apiserver"}[5m])) by (apiserver, resource, verb)


## Requests Aborted Rate by Instance
resource_verb:apiserver_request_aborts_total:rate5m{apiserver="kube-apiserver"}
sum(rate(apiserver_request_aborts_total{apiserver=~"kube-apiserver"}[5m])) by (apiserver, resource, verb)

## Server Filter Duration - 99th Percentile
topk(20, histogram_quantile(0.99, filter:apiserver_request_filter_duration_seconds_bucket:rate5m{apiserver="kube-apiserver"}))
topk(20, histogram_quantile(0.99, (sum(rate(apiserver_request_filter_duration_seconds_bucket{apiserver=~"kube-apiserver"}[5m])) by (apiserver, filter, le))))


## Rate of Events Sent to Watch Clients
topk(25, group_kind:apiserver_watch_events_total:rate5m{apiserver="kube-apiserver"})
topk(25, sum(rate(apiserver_watch_events_total{apiserver=~"kube-apiserver"}[5m])) by (apiserver, group, kind))

## Watch Event Size per Second by Group and Kind
topk(20, group_kind:apiserver_watch_events_sizes_sum:rate5m{apiserver="kube-apiserver"})
topk(20, sum(rate(apiserver_watch_events_sizes_sum{apiserver=~"openshift-apiserver|kube-apiserver|openshift-oauth-apiserver"}[5m])) by (apiserver, group, kind))

## Registered Watchers
topk(25, group_resource:apiserver_longrunning_requests:sum{apiserver="kube-apiserver"})
topk(25, sum(apiserver_longrunning_requests{apiserver=~"openshift-apiserver|kube-apiserver|openshift-oauth-apiserver"}) by (apiserver, group, resource))

## Rate of TLS Handshake Error
cluster:apiserver_tls_handshake_errors_total:rate5m{apiserver="kube-apiserver"}
sum(rate(apiserver_tls_handshake_errors_total{apiserver=~"openshift-apiserver|kube-apiserver|openshift-oauth-apiserver"}[5m])) by (apiserver)

## etcd Object Count
#topk(25, resource:apiserver_storage_objects:max{apiserver="kube-apiserver"})
topk(25, max by (apiserver, resource)(apiserver_storage_objects{apiserver=~"openshift-apiserver|kube-apiserver|openshift-oauth-apiserver"}))




